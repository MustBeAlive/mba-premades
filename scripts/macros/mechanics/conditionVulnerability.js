import {mba} from "../../helperFunctions.js";

let effectData = {
    'name': 'Condition Disadvantage',
    'icon': 'modules/mba-premades/icons/generic/generic_debuff.webp',
    'changes': [
        {
            'key': 'flags.midi-qol.disadvantage.ability.save.all',
            'value': '1',
            'mode': 5,
            'priority': 120
        }
    ],
    'flags': {
        'dae': {
            'showIcon': true
        }
    }
};
let cleanUpList = [];

export async function conditionVulnerabilityEarly(workflow) {
    if (!workflow.targets.size) return;
    if (workflow.item.system.save?.dc === null || workflow.item.system.save === undefined) return;
    if (!workflow.item.effects.size) return;
    let itemConditions = new Set();
    workflow.item.effects.forEach(effect => {
        effect.changes.forEach(element => {
            if (element.key === 'macro.CE') itemConditions.add(element.value.toLowerCase());
        });
    });
    if (!itemConditions.size) return;
    workflow.targets.forEach(tokenDoc => {
        itemConditions.forEach(async condition => {
            if (tokenDoc.document.actor.flags['mba-premades']?.CV?.[condition] === 1) {
                await mba.createEffect(tokenDoc.document.actor, effectData);
                cleanUpList.push(tokenDoc.document.actor);
            }
        });
    });
}

export async function conditionVulnerabilityLate(workflow) {
    for (let i of cleanUpList) {
        let effect = mba.findEffect(i, 'Condition Disadvantage');
        if (effect) await mba.removeEffect(effect);
    }
    cleanUpList = [];
}