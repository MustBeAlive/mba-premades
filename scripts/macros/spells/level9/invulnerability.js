import { mba } from "../../../helperFunctions.js";

// To do: better icon

export async function invulnerability({ speaker, actor, token, character, item, args, scope, workflow }) {
    async function effectMacroDel() {
        new Sequence()

            .effect()
            .file("jb2a.shield.02.outro_explode.red")
            .attachTo(token)
            .scaleToObject(1.7 * token.document.texture.scaleX)
            .waitUntilFinished(-500)

            .thenDo(function () {
                Sequencer.EffectManager.endEffects({ name: `${token.document.name} Invul` })
            })

            .play()
    };
    const effectData = {
        'name': workflow.item.name,
        'icon': workflow.item.img,
        'origin': workflow.item.uuid,
        'description': `
            <p>You are immune to all damage until the spell ends.</p>
        `,
        'duration': {
            'seconds': 600
        },
        'changes': [
            {
                'key': 'system.traits.di.all',
                'mode': 0,
                'value': 1,
                'priority': 20
            }
        ],
        'flags': {
            'effectmacro': {
                'onDelete': {
                    'script': mba.functionToString(effectMacroDel)
                }
            },
            'midi-qol': {
                'castData': {
                    baseLevel: 9,
                    castLevel: workflow.castData.castLevel,
                    itemUuid: workflow.item.uuid
                }
            }
        }
    };
    new Sequence()

        .effect()
        .file("jb2a.energy_strands.in.red.01.2")
        .attachTo(workflow.token)
        .scaleToObject(3.5)
        .playbackRate(0.8)

        .effect()
        .file("jb2a.extras.tmfx.border.circle.outpulse.01.fast")
        .atLocation(workflow.token)
        .scaleToObject(2)
        .fadeIn(1000)
        .fadeOut(2000)
        .opacity(0.75)
        .zIndex(1)
        .belowTokens()
        .filter("ColorMatrix", { saturate: 0, brightness: 0 })

        .effect()
        .file("jb2a.extras.tmfx.outflow.circle.04")
        .attachTo(workflow.token)
        .scaleToObject(2)
        .fadeIn(1000)
        .fadeOut(2000)
        .opacity(1.2)
        .zIndex(1)
        .randomRotation()
        .belowTokens()
        .filter("ColorMatrix", { saturate: 0, brightness: 0 })

        .wait(1500)

        .effect()
        .file("jb2a.cure_wounds.400px.red")
        .attachTo(workflow.token)
        .scaleToObject(4)
        .scaleIn(0.1, 1000)
        .belowTokens()

        .effect()
        .file("jb2a.fireflies.many.01.red")
        .attachTo(workflow.token)
        .scaleToObject(1.5)
        .delay(500)
        .fadeOut(1000)

        .effect()
        .file("jb2a.shield.02.intro.red")
        .attachTo(workflow.token)
        .scaleToObject(1.7 * workflow.token.document.texture.scaleX)
        .opacity(0.8)
        .playbackRate(0.8)

        .effect()
        .file("jb2a.shield.02.loop.red")
        .attachTo(workflow.token)
        .scaleToObject(1.7 * workflow.token.document.texture.scaleX)
        .delay(600)
        .fadeIn(500)
        .opacity(0.8)
        .playbackRate(0.8)
        .persist()
        .name(`${workflow.token.document.name} Invul`)

        .effect()
        .file("jb2a.token_border.circle.static.orange.003")
        .attachTo(workflow.token)
        .scaleToObject(2)
        .delay(600)
        .fadeIn(1000)
        .opacity(0.8)
        .filter("ColorMatrix", { hue: 345 })
        .persist()
        .name(`${workflow.token.document.name} Invul`)

        .thenDo(async () => {
            await mba.createEffect(workflow.actor, effectData)
        })

        .play()
}